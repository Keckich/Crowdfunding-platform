@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="Search" asp-action="Index"><i class="fa fa-search" aria-hidden="true"></i></a>
    </li>
    @if (SignInManager.IsSignedIn(User))
    {

        <li class="nav-item" style="display: inline-flex">
            @if (!string.IsNullOrEmpty(UserManager.GetUserAsync(User).Result.ImageUrl))
            {
                <a asp-controller="User" asp-action="Index" asp-route-id="@UserManager.GetUserAsync(User).Result.Id">
                    <img class="profile-icon" src="@Url.Content(UserManager.GetUserAsync(User).Result.ImageUrl)">
                </a>   
            }
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <i class="fa fa-cog" aria-hidden="true"></i>
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark"><i class="fa fa-sign-out" aria-hidden="true"></i></button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
